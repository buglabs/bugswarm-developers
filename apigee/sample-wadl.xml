<application xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:apigee="http://api.apigee.com/wadl/2010/07/" 
  xmlns="http://wadl.dev.java.net/2009/02"
  xsi:schemaLocation="http://wadl.dev.java.net/2009/02 http://apigee.com/schemas/wadl-schema.xsd http://api.apigee.com/wadl/2010/07/ http://apigee.com/schemas/apigee-wadl-extensions.xsd">

  <!-- Base defines the domain and base path of the endpoint -->
  <resources base="http://api.mydomain.com/1">

    <resource path="statuses/public_timeline.{format}">
      <!-- Resources that are the same but have multiple verbs can have multiple method items in the WADL. -->
      <!-- Methods should each have a unique id. -->
      <!-- The attribute displayName can be used to control the name that appears in the list in the Console. -->
      <method id="statusespublic_timeline" name="GET" apigee:displayName="PublicTimeline">

        <!-- Tags are used to organize the list of methods. Primary tag will list the default placement. -->
        <apigee:tags>
          <apigee:tag primary="true">Timeline</apigee:tag>
          <apigee:tag>Status</apigee:tag>
        </apigee:tags>

        <!-- Is authentication required for this method? -->
        <apigee:authentication required="false" />

        <!-- Example element is used to specify the sample URL to display in the Console's request URL field. -->
        <apigee:example url="/statuses/public_timeline.{format}" />

        <!-- The content of the doc element is shown as a tooltip in the Console's method list. -->
	    <doc title="" apigee:url="http://dev.twitter.com/doc/get/statuses/public_timeline">
		  Returns the 20 most recent statuses from non-protected users who have set a custom user icon.
		  The public timeline is cached for 60 seconds so requesting it more often than that 
		  is a waste of resources.
	    </doc>
      </method>
    </resource>

    <resource path="statuses/home_timeline.{format}">
      <!-- A "query" style denotes a query parameter. "header" is a common alternative. -->
      <param name="count" required="false" type="xsd:string" style="query" default="5">
        <!-- Docs are optional, but recommended. -->
        <doc>Specifies the number of records to retrieve. Must be less than or equal to 200.</doc>
      </param>

      <!-- If a param is required, specify so. Default values can also be supplied. -->
      <param name="page" required="false" type="xsd:string" style="query" default="2">
        <doc>Specifies the page of results to retrieve.</doc>
      </param>

      <param name="max_id" required="false" type="xsd:string" style="query" default="54321">
        <doc>Returns results with an ID less than (that is, older than) or equal to the specified ID.</doc>
      </param>

      <param name="since_id" required="false" type="xsd:string" style="query" default="12345">
        <doc>
          Returns results with an ID greater than (that is, more recent than) the specified ID.
          There are limits to the number of Tweets which can be accessed through the API.
          If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.			
        </doc>
      </param>

      <param name="trim_user" required="false" type="xsd:string" style="query" default="true">
        <doc>
          When set to either true, t or 1, each tweet returned in a timeline will include a user object 
          including only the status authors numerical ID.
          Omit this parameter to receive the complete user object.
        </doc>
      </param>

      <param name="include_entities" required="false" type="xsd:string" style="query" default="true">
        <doc>
          When set to either true, t or 1, each tweet will include a node called "entities,".
          This node offers a variety of metadata about the tweet in a discreet structure, including:
          user_mentions, urls, and hashtags.
          While entities are opt-in on timelines at present, they will be made a default component of output
          in the future. See Tweet Entities for more detail on entities.
         </doc>
      </param>

      <method id="statuseshome_timeline" name="GET" apigee:displayName="HomeTimeline">
        <apigee:tags>
          <apigee:tag primary="true">Timeline</apigee:tag>
            <apigee:tag>Status</apigee:tag>
          </apigee:tags>
        <apigee:authentication required="true" />
        <apigee:example url="/statuses/home_timeline.{format}" />

        <doc title="" apigee:url="http://dev.twitter.com/doc/get/statuses/home_timeline">
          Returns the 20 most recent statuses, including retweets, posted by the authenticating user and 
          that user's friends. This is the equivalent of /timeline/home on the Web.
          Usage note: This home_timeline is identical to statuses/friends_timeline except it also contains retweets,
          which statuses/friends_timeline does not (for backwards compatibility reasons). In a
          future version of the API, statuses/friends_timeline will go away and be replaced by home_timeline.
        </doc>
      </method>
    </resource>
  </resources>
</application>
